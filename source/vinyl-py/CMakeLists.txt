SET(LIB_NAME vinyl)

# vinyl folder
INCLUDE_DIRECTORIES(${VINYL_PATH_INCLUDE})

SET(HEADER_PATH ${VINYL_PATH_HEADER})
SET(SOURCE_PATH ${VINYL_PATH_SOURCE}/vinyl-py)

SET(INPUT_LIST
	${HEADER_PATH}/vinyl-py.h
	${SOURCE_PATH}/vinyl-py.cpp
)
SOURCE_GROUP("input" FILES ${INPUT_LIST})

# search dependences
FIND_PACKAGE(PythonLibs REQUIRED)
FIND_PACKAGE(Numpy REQUIRED CONFIGS NumpyConfig.cmake PATHS ${PROJECT_SOURCE_DIR})

# include dependences
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${NUMPY_INCLUDE_DIRS})

IF(VINYL_BUILD_SHARED_DLL)
	ADD_DEFINITIONS(-DVINYL_BUILD_DLL_EXPORT)
	ADD_LIBRARY(${LIB_NAME} SHARED ${INPUT_LIST})
ELSE()
	ADD_DEFINITIONS(-DVINYL_STATIC)
	ADD_LIBRARY(${LIB_NAME} STATIC ${INPUT_LIST})
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE vinyl-c)
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE ${PYTHON_LIBRARIES})
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE ${NUMPY_LIBRARIES})

SET_TARGET_ATTRIBUTE(${LIB_NAME} "core")